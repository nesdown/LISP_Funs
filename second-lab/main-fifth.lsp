; Написать программу в соответствии с заданием из Таблицы 4
; Написать программу, которая в исходном списке заменяет все элементы-целые  числа остатками от их деления на 2.  Список может содержать подсписки  произвольной глубины вложения.

(defun divider(arr)
  (cond
    ; Первое условие - что массив не является нулевым. Это нужно, чтоб понять конец вложенности списка.
    ((null arr) nil)

    ; проверим, является ли соответственно первый аргумент списка списком. Если да - то выполним рекурсивный вызов функции. cons конструирует список на основе текущего.
    ((listp (car arr)) (cons (divider (car arr)) (divider (cdr arr))))

    ; аналогично проверим, является ли элемент числом. Если является, то заносим остаток от деления числа на два и конструируем список.
    ((numberp (car arr)) (cons (mod (car arr) 2) (divider (cdr arr))))

    ; И, наконец, если ничего не помогло, выполняем конструирование списка такого типа:
    (t (cons (car arr) (divider (cdr arr))))
  )
)
